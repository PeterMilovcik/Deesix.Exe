// <auto-generated />
using System;
using Deesix.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deesix.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Deesix.Domain.Entities.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Character");
                });

            modelBuilder.Entity("Deesix.Domain.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CurrentTime")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Deesix.Domain.Entities.Realm", b =>
                {
                    b.Property<int>("RealmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorldId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RealmId");

                    b.HasIndex("WorldId");

                    b.ToTable("Realm");
                });

            modelBuilder.Entity("Deesix.Domain.Entities.World", b =>
                {
                    b.Property<int>("WorldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorldSettingsJson")
                        .HasColumnType("TEXT");

                    b.HasKey("WorldId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("World");
                });

            modelBuilder.Entity("Deesix.Domain.Entities.Character", b =>
                {
                    b.HasOne("Deesix.Domain.Entities.Game", null)
                        .WithOne("Character")
                        .HasForeignKey("Deesix.Domain.Entities.Character", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deesix.Domain.Entities.Realm", b =>
                {
                    b.HasOne("Deesix.Domain.Entities.World", null)
                        .WithMany("Realms")
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deesix.Domain.Entities.World", b =>
                {
                    b.HasOne("Deesix.Domain.Entities.Game", null)
                        .WithOne("World")
                        .HasForeignKey("Deesix.Domain.Entities.World", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deesix.Domain.Entities.Game", b =>
                {
                    b.Navigation("Character");

                    b.Navigation("World");
                });

            modelBuilder.Entity("Deesix.Domain.Entities.World", b =>
                {
                    b.Navigation("Realms");
                });
#pragma warning restore 612, 618
        }
    }
}
